apply plugin: 'com.android.application'
//apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def lp = new Properties()
lp.load(rootProject.file('local.properties').newDataInputStream())
def keystoreProperties = new Properties()
keystoreProperties.load(rootProject.file("keystore.properties").newDataInputStream())
android {
    signingConfigs {
        devtok {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion 30
    defaultConfig {
        applicationId lp["id_music_sound"]
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 54
        versionName "2.3"
        multiDexEnabled true
        buildConfigField "String", "ClIENT_ID", lp["s_c_id"]
        buildConfigField "String", "SERVER", lp["s"]
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.devtok
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "MusicSound.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerVersion "$kotlin_version"
        kotlinCompilerExtensionVersion '1.0.0-alpha12'
    }
    lintOptions {
        abortOnError false
    }
    kotlinOptions {
        useIR = true
        jvmTarget = '1.8'
    }
    buildToolsVersion '30.0.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.facebook.android:audience-network-sdk:6.2.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'
    implementation 'com.google.firebase:firebase-analytics:18.0.2'
    //coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    //compose
    implementation 'androidx.activity:activity-compose:1.3.0-alpha02'
    implementation "androidx.compose.runtime:runtime:1.0.0-alpha12"
    implementation 'androidx.compose.material:material:1.0.0-alpha12'
    //dagger
    kapt 'com.google.dagger:dagger-android-processor:2.32'
    kapt 'com.google.dagger:dagger-compiler:2.32'
    implementation 'com.google.dagger:dagger-android-support:2.32'
}
//apply plugin: 'com.google.gms.google-services'

//task copyFile(type: Copy) {
//    from(rootProject.file('crashlytics/google-services_music_sound.json')) {
//        rename 'google-services_music_sound.json', 'google-services.json'
//    }
//    into(rootProject.file('app'))
//}
//
//gradle.projectsEvaluated {
//    preBuild.dependsOn(copyFile)
//}
